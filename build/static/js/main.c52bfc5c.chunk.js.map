{"version":3,"sources":["store/configureStore.js","Components/Client/Client.js","Components/GameOver/GameOVer.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","store","createStore","compose","devToolsEnhancer","rrfProps","config","userProfile","useFirestoreForProfile","dispatch","createFirestoreInstance","firestoreConnect","collection","connect","state","props","client","ordered","details","history","useState","nums","setNums","answer","setAnswer","life","setLife","scoree","setScoree","quesNum","setQuesNum","time","setTime","useEffect","randomingData","setInterval","t","console","log","copyN","i","length","push","j","Math","floor","random","k","handleClick","a","b","toLowerCase","trim","s","aler","alert","update","doc","score","record","l","q","className","Q","undefined","Notes","map","n","style","color","Form","onSubmit","e","preventDefault","A","Group","controlId","Control","type","placeholder","value","onChange","target","Button","onClick","Spinner","animation","toFixed","App","Container","path","exact","component","Client","GameOVer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c52bfc5c.chunk.js","sourcesContent":["import {createStore, combineReducers, compose} from 'redux'\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/storage'\r\nimport 'firebase/firestore'\r\nimport {firebaseReducer} from 'react-redux-firebase'\r\nimport {devToolsEnhancer} from 'redux-devtools-extension'\r\nimport {createFirestoreInstance, firestoreReducer} from 'redux-firestore'\r\n\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBYnpYXMg7q3rsTdFpF0VaeWKTCDA3YaQw\",\r\n  authDomain: \"vocab-e7c56.firebaseapp.com\",\r\n  projectId: \"vocab-e7c56\",\r\n  storageBucket: \"vocab-e7c56.appspot.com\",\r\n  messagingSenderId: \"397124374355\",\r\n  appId: \"1:397124374355:web:0c5d27a73b98f86ecf1ba6\",\r\n  measurementId: \"G-QVQ7RTYHKX\"\r\n};\r\n\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n\r\n  firebase.firestore() // <- needed if using firestore\r\n\r\n\r\n  // Add firebase to reducers\r\n    const rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer // <- needed if using firestore\r\n  })\r\n\r\n\r\n  const initialState = {}\r\n  const store = createStore(rootReducer, initialState, compose(devToolsEnhancer()))\r\n\r\n\r\n\r\n  export default store;\r\n\r\n\r\n  export const rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance // <- needed if using firestore\r\n  }","import React, {useState, useEffect} from 'react'\r\nimport {Button, Spinner} from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport {Form} from 'react-bootstrap'\r\nimport './Client.css'\r\n\r\nconst Client = props => {\r\n\r\n    const {client, history, details, firestore} = props\r\n    const [nums, setNums] = useState([0]) ;\r\n    const [answer, setAnswer] = useState('')\r\n    const [life, setLife] = useState(3)\r\n    const [scoree, setScoree] = useState(0)\r\n    const [quesNum, setQuesNum] = useState(0)\r\n    const [time, setTime] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        if(client){\r\n            randomingData();\r\n            setInterval(() => {\r\n                setTime(t=>t+1)\r\n                \r\n            }, 1000);\r\n        }\r\n    },[client])\r\n    console.log(time)\r\n    const randomingData = () => {\r\n        const copyN = []\r\n        for(let i = 0; i < client.length; i++){\r\n            copyN.push(i)\r\n        }\r\n        for (let i = copyN.length -1; i > 0; i--) {\r\n            let j = Math.floor(Math.random() * i)\r\n            let k = copyN[i]\r\n            copyN[i] = copyN[j]\r\n            copyN[j] = k\r\n        }\r\n        setNums(copyN)\r\n    }\r\n    \r\n    const handleClick = (a, b) => {\r\n        \r\n        if(answer.length === 0){\r\n            alert('You should write your answer')\r\n            return\r\n        }\r\n        if(a.toLowerCase() === answer.trim().toLowerCase()){\r\n            setScoree(s => s+1)\r\n        }\r\n        else{\r\n            let aler =`${a} --- ${b}`; \r\n            alert(aler)\r\n            if(life === 1){\r\n                firestore.update({collection : 'details', doc: 'details'}, {score : scoree, time : time})\r\n                if(details[0].record < scoree){\r\n                    history.push('/gameover')\r\n                    firestore.update({collection : 'details', doc : 'details'}, {record : scoree})\r\n                    return\r\n                }\r\n                history.push('/gameover')\r\n                return\r\n            }\r\n            setLife(l=>l-1)\r\n        }\r\n        if(quesNum >= nums.length-1){\r\n            randomingData();\r\n            setQuesNum(0);\r\n            setAnswer('');\r\n            return\r\n        }\r\n        setQuesNum(q=>q+1)\r\n        setAnswer('')\r\n    }\r\n\r\n    if(client && details){\r\n        \r\n        return (\r\n            <>\r\n                {\r\n                    <div className='contain'>\r\n                        <div className='head'>\r\n                            <h3>Record : {details.[0].record}</h3>\r\n                            <h4>Score : {scoree}</h4>\r\n                            <h5>Life : {life}</h5>\r\n                        </div>\r\n\r\n                        <p>{client[nums[quesNum]].Q}</p>\r\n                        {client[nums[quesNum]].Notes !== undefined ? client[nums[quesNum]].Notes.map(n=>(\r\n                            <p style={{color:\"orange\"}}>({n})</p>\r\n                        )) : ''}\r\n                        <Form onSubmit={(e)=>{\r\n                            e.preventDefault() \r\n                            handleClick(client[nums[quesNum]].A, client[nums[quesNum]].Q)}}>\r\n                            <Form.Group controlId=\"firstName\">\r\n                                <Form.Control\r\n                                className='answer-input' \r\n                                type=\"text\" \r\n                                placeholder=\"Enter answer\"\r\n                                value={answer}\r\n                                onChange={e=>setAnswer(e.target.value.trim())} />\r\n                            </Form.Group>\r\n\r\n                            <Button onClick={()=>handleClick(client[nums[quesNum]].A)}> Submit </Button>\r\n                        </Form>\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    }else{\r\n        return <div className=\"contain\"><Spinner animation=\"border\" /></div>\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect([{collection : 'client'}, {collection : 'details'}]),\r\n    connect((state, props)=>({\r\n        client : state.firestore.ordered.client,\r\n        details : state.firestore.ordered.details\r\n    }))\r\n)(Client)","import React from 'react';\r\nimport { Button, Spinner } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport './GameOver.css'\r\n\r\nconst GameOVer = (props) => {\r\n  const {history, details} = props\r\n  if(details){\r\n    return (\r\n      <div className='game-over-container'>\r\n        <div>\r\n          <h2 style={{color: 'red'}}>Game Over</h2>\r\n  \r\n          <div>\r\n            <div className='stats'>Your score is <span className=\"statistics\">{details[0].score}</span></div>\r\n            <div className='stats'>Time per word <span className=\"statistics\">{details[0].score === 0 ? details[0].time : (details[0].time/details[0].score).toFixed(2)}s</span></div>\r\n            <div className='stats'>Record is <span className='statistics'>{details[0].record}</span></div>\r\n          </div>\r\n        </div>\r\n        <Button className='game-over-btn' onClick={()=>history.push('/')}>Again</Button>\r\n      </div>\r\n    );\r\n  }else{\r\n    return <div className=\"contain\"><Spinner animation=\"border\" /></div>\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  firestoreConnect([{collection : 'details'}]),\r\n  connect((state, props)=>({\r\n      details : state.firestore.ordered.details\r\n  }))\r\n)(GameOVer)\r\n","import React from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport {Container} from 'react-bootstrap'\nimport store, { rrfProps } from './store/configureStore'\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport {Provider} from 'react-redux'\nimport Client from './Components/Client/Client'\nimport GameOVer from './Components/GameOver/GameOVer'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rrfProps} >\n        <Router>\n          <Container>\n            <Switch>\n              <Route path='/' exact component={Client} />\n              <Route path='/gameover' exact component={GameOVer} />\n            </Switch>\n          </Container>\n        </Router>\n      </ReactReduxFirebaseProvider>\n    </Provider>\n  )\n}\n\nexport default App\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}